// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  email     String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Post      Post[]
  comments  Comments[]
  reaction  Reaction[]
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  imagePath  String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   Int
  author     User       @relation(fields: [authorId], references: [id])
  categoryId Int
  category   Category   @relation(fields: [categoryId], references: [id])
  comments   Comments[]
  reaction   Reaction[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  post Post[]
}

model Comments {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
}

model Reaction {
  id        Int          @id @default(autoincrement())
  type      ReactionType
  createdAt DateTime     @default(now())
  user      User         @relation(fields: [userId], references: [id])
  userId    Int
  post      Post         @relation(fields: [postId], references: [id])
  postId    Int

  @@unique([userId, postId])
}

enum ReactionType {
  LIKE
  LOVE
}


